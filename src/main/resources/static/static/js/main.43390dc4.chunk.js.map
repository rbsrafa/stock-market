{"version":3,"sources":["services/simulationService.ts","components/navbar/navbar.tsx","components/simulation/simulationSettings/simulationSettings.tsx","components/relatories/relatory/relatory.tsx","components/simulation/simulationView.tsx/simulationView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["runSimulation","_x","simulationService_runSimulation","apply","this","arguments","_callee","settings","request","res","regenerator_default","a","wrap","_context","prev","next","investorsQuantity","numberOfInvestors","companiesQuantity","numberOfCompanies","maxBudget","maxInvestorBudget","minBudget","minInvestorBudget","maxSharePrice","minSharePrice","maxAmmountShares","maxShareNumber","minAmmountShares","minShareNumber","fetch","method","headers","Content-Type","body","JSON","stringify","sent","json","abrupt","stop","getSimulations","_getSimulations","_callee2","_context2","sort","b","simulationId","Navbar","react_default","createElement","Fragment","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","SimulationSettings","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","e","target","value","setState","console","log","_this2","htmlFor","onChange","_updateState","min","max","onClick","_handleRunClick","Relatory","showRelatories","showCWHC","showCWLC","showIWHS","showIWLS","showIWHC","showIWLC","relatory","_renderCompaniesWithHighestCapital","_renderCompaniesWithLowestCapital","_renderInvestorsWithHeighestShares","_renderInvestorsWithLowestShares","_renderInvestorsWithHeighestCompanies","_renderInvestorsWithLowestCompanies","_this3","investorWithHighestNumberOfCompanies","map","i","_renderInvestor","_this4","investorWithLeastNumberOfCompanies","_this5","investorsWithHighestNumberOfShares","_this6","investorsWithLowestNumberOfShares","key","firstName","lastName","budget","toFixed","numberOfShares","_timestampConverter","createdAt","updatedAt","_this7","companiesWithHighestCapital","c","_renderCompany","companyHighestCapital","_this8","companiesWithLowestCapital","companyLowestCapital","capital","name","availableShares","sharePrice","timestamp","date","split","time","concat","SimulationView","simulation","numberOfTransactions","relatory_Relatory","App","simulations","isSimulationRunning","length","_runSimulation","navbar_Navbar","simulationSettings_SimulationSettings","_handleRunButton","role","_renderSimulations","s","simulationView_SimulationView","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8UACQ,SAAeA,EAAtBC,GAAA,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,EAA6BC,GAA7B,IAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACFP,EAAU,CACZQ,kBAAmBT,EAASU,kBAC5BC,kBAAmBX,EAASY,kBAC5BC,UAAWb,EAASc,kBACpBC,UAAWf,EAASgB,kBACpBC,cAAejB,EAASiB,cACxBC,cAAelB,EAASkB,cACxBC,iBAAkBnB,EAASoB,eAC3BC,iBAAkBrB,EAASsB,gBATvBhB,EAAAE,KAAA,EAYYe,MAChB,sBACA,CACEC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU5B,KAnBnB,cAYAC,EAZAI,EAAAwB,KAAAxB,EAAAE,KAAA,EAsBON,EAAI6B,OAtBX,cAAAzB,EAAA0B,OAAA,SAAA1B,EAAAwB,MAAA,wBAAAxB,EAAA2B,SAAAlC,6BAyBD,SAAemC,IAAtB,OAAAC,EAAAvC,MAAAC,KAAAC,sDAAO,SAAAsC,IAAA,IAAAlC,EAAA6B,EAAA,OAAA5B,EAAAC,EAAAC,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACae,MAChB,6BACA,CACEC,OAAQ,MACRC,QAAS,CACPC,eAAgB,sBANjB,cACCxB,EADDmC,EAAAP,KAAAO,EAAA7B,KAAA,EAUcN,EAAI6B,OAVlB,cAUCA,EAVDM,EAAAP,MAWAQ,KAAK,SAAClC,EAAOmC,GAAR,OAAmBA,EAAEC,aAAepC,EAAEoC,eAX3CH,EAAAL,OAAA,SAYED,GAZF,wBAAAM,EAAAJ,SAAAG,uCCxBcK,mLAEjB,OACEC,EAAAtC,EAAAuC,cAACD,EAAAtC,EAAMwC,SAAP,KACEF,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,+CACbH,EAAAtC,EAAAuC,cAAA,KAAGE,UAAU,eAAeC,KAAK,KAAjC,0BACAJ,EAAAtC,EAAAuC,cAAA,UAAQE,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBACpLV,EAAAtC,EAAAuC,cAAA,QAAME,UAAU,yBAElBH,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,2BAA2BQ,GAAG,0BAC3CX,EAAAtC,EAAAuC,cAAA,MAAIE,UAAU,sBACZH,EAAAtC,EAAAuC,cAAA,MAAIE,UAAU,mBACZH,EAAAtC,EAAAuC,cAAA,KAAGE,UAAU,WAAWC,KAAK,KAA7B,QAAsCJ,EAAAtC,EAAAuC,cAAA,QAAME,UAAU,WAAhB,0BAZlBS,aCgBfC,qBAEnB,SAAAA,EAAYC,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7D,KAAA0D,IACxBE,EAAAC,OAAAE,EAAA,EAAAF,CAAA7D,KAAA6D,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAjE,KAAM2D,KACDO,MAAQ,CACXrD,kBAAmB,IACnBM,kBAAmB,IACnBF,kBAAmB,IACnBF,kBAAmB,IACnBU,eAAgB,IAChBF,eAAgB,IAChBF,cAAe,GACfD,cAAe,KAVOwC,4EAeLO,GACnB,IAAID,EAAQlE,KAAKkE,MAChBA,EAAcC,EAAEC,OAAOZ,IAAMW,EAAEC,OAAOC,MACvCrE,KAAKsE,SAASJ,GACdK,QAAQC,IAAIxE,KAAKkE,wCAGV,IAAAO,EAAAzE,KAEP,OACE6C,EAAAtC,EAAAuC,cAAA,WACED,EAAAtC,EAAAuC,cAAA,iCACAD,EAAAtC,EAAAuC,cAAA,YAEED,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,qBAAnC,uBAAkF7B,EAAAtC,EAAAuC,cAAA,WAClFD,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAMrD,oBACpCgC,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,IAAIC,IAAI,MAAMT,MAAOrE,KAAKkE,MAAMrD,kBAAoBmC,UAAU,SAASQ,GAAG,uBAG/FX,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,qBAAnC,uBAAkF7B,EAAAtC,EAAAuC,cAAA,WAClFD,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAM/C,oBACpC0B,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,OAAOC,IAAI,OAAOT,MAAOrE,KAAKkE,MAAM/C,kBAAoB6B,UAAU,SAASQ,GAAG,uBAGnGX,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,qBAAnC,uBAAkF7B,EAAAtC,EAAAuC,cAAA,WAClFD,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAMjD,oBACpC4B,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,OAAOC,IAAI,QAAQT,MAAOrE,KAAKkE,MAAMjD,kBAAoB+B,UAAU,SAASQ,GAAG,uBAGpGX,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,qBAAnC,uBAAkF7B,EAAAtC,EAAAuC,cAAA,WAClFD,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAMnD,oBACpC8B,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,IAAIC,IAAI,MAAMT,MAAOrE,KAAKkE,MAAMnD,kBAAoBiC,UAAU,SAASQ,GAAG,uBAG/FX,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,kBAAnC,wBAAgF7B,EAAAtC,EAAAuC,cAAA,WAChFD,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAMzC,iBACpCoB,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,MAAMC,IAAI,MAAMT,MAAOrE,KAAKkE,MAAMzC,eAAiBuB,UAAU,SAASQ,GAAG,oBAG9FX,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,kBAAnC,wBAAgF7B,EAAAtC,EAAAuC,cAAA,WAChFD,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAM3C,iBACpCsB,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,MAAMC,IAAI,OAAOT,MAAOrE,KAAKkE,MAAM3C,eAAiByB,UAAU,SAASQ,GAAG,oBAG/FX,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,iBAAnC,mBAA0E7B,EAAAtC,EAAAuC,cAAA,WAC1ED,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAM7C,gBACpCwB,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,KAAKC,IAAI,KAAKT,MAAOrE,KAAKkE,MAAM7C,cAAgB2B,UAAU,SAASQ,GAAG,mBAG3FX,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,SAAOE,UAAU,UAAU0B,QAAQ,iBAAnC,mBAA0E7B,EAAAtC,EAAAuC,cAAA,WAC1ED,EAAAtC,EAAAuC,cAAA,QAAMU,GAAG,QAAOX,EAAAtC,EAAAuC,cAAA,cAAS9C,KAAKkE,MAAM9C,gBACpCyB,EAAAtC,EAAAuC,cAAA,SACE6B,SAAU,SAACR,GAAD,OAAOM,EAAKG,aAAaT,IACnCjB,KAAK,QAAQ2B,IAAI,KAAKC,IAAI,MAAMT,MAAOrE,KAAKkE,MAAM9C,cAAgB4B,UAAU,SAASQ,GAAG,mBAG5FX,EAAAtC,EAAAuC,cAAA,SAAOiC,QAAS,kBAAMN,EAAKO,mBAAmBhC,UAAU,4BAAxD,mDAQNhD,KAAK2D,MAAMxD,SAASH,KAAKkE,cAvGmBT,cCD3BwB,2BAEnB,SAAAA,EAAYtB,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7D,KAAAiF,IACxBrB,EAAAC,OAAAE,EAAA,EAAAF,CAAA7D,KAAA6D,OAAAG,EAAA,EAAAH,CAAAoB,GAAAhB,KAAAjE,KAAM2D,KACDO,MAAQ,CACXgB,gBAAgB,EAChBC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,GATY5B,mFAcxBW,QAAQC,IAAIxE,KAAK2D,MAAM8B,2CAGhB,IAAAhB,EAAAzE,KACP,OACE6C,EAAAtC,EAAAuC,cAACD,EAAAtC,EAAMwC,SAAP,KACEF,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,kBACbH,EAAAtC,EAAAuC,cAAA,OACEE,UAAU,4BACV+B,QAAS,kBAAMN,EAAKH,SAAS,CAAEa,UAAWV,EAAKP,MAAMiB,aAEpDnF,KAAK0F,sCAGR7C,EAAAtC,EAAAuC,cAAA,OACEE,UAAU,4BACV+B,QAAS,kBAAMN,EAAKH,SAAS,CAAEc,UAAWX,EAAKP,MAAMkB,aAEpDpF,KAAK2F,qCAGR9C,EAAAtC,EAAAuC,cAAA,OACEiC,QAAS,kBAAMN,EAAKH,SAAS,CAAEe,UAAWZ,EAAKP,MAAMmB,YACrDrC,UAAU,6BACThD,KAAK4F,sCAGR/C,EAAAtC,EAAAuC,cAAA,OACEiC,QAAS,kBAAMN,EAAKH,SAAS,CAAEgB,UAAWb,EAAKP,MAAMoB,YACrDtC,UAAU,6BAEThD,KAAK6F,oCAGRhD,EAAAtC,EAAAuC,cAAA,OACEiC,QAAS,kBAAMN,EAAKH,SAAS,CAAEiB,UAAWd,EAAKP,MAAMqB,YACrDvC,UAAU,6BAEThD,KAAK8F,yCAGRjD,EAAAtC,EAAAuC,cAAA,OACEiC,QAAS,kBAAMN,EAAKH,SAAS,CAAEkB,UAAWf,EAAKP,MAAMsB,YACrDxC,UAAU,6BAEThD,KAAK+F,yGAOgC,IAAAC,EAAAhG,KAC9C,OAAQ6C,EAAAtC,EAAAuC,cAAA,WACND,EAAAtC,EAAAuC,cAAA,wDAEC9C,KAAKkE,MAAMqB,SAERvF,KAAK2D,MAAM8B,SAASQ,qCAAqCC,IAAI,SAACC,GAC5D,OAAOH,EAAKI,gBAAgBD,KAE5BtD,EAAAtC,EAAAuC,cAAA,2EAKoC,IAAAuD,EAAArG,KAC5C,OAAQ6C,EAAAtC,EAAAuC,cAAA,WACND,EAAAtC,EAAAuC,cAAA,uDACC9C,KAAKkE,MAAMsB,SAERxF,KAAK2D,MAAM8B,SAASa,mCAAmCJ,IAAI,SAACC,GAC1D,OAAOE,EAAKD,gBAAgBD,KAE5BtD,EAAAtC,EAAAuC,cAAA,0EAImC,IAAAyD,EAAAvG,KAC3C,OAAQ6C,EAAAtC,EAAAuC,cAAA,WACND,EAAAtC,EAAAuC,cAAA,qDACC9C,KAAKkE,MAAMmB,SAERrF,KAAK2D,MAAM8B,SAASe,mCAAmCN,IAAI,SAACC,GAC1D,OAAOI,EAAKH,gBAAgBD,KAE5BtD,EAAAtC,EAAAuC,cAAA,wEAIiC,IAAA2D,EAAAzG,KACzC,OAAQ6C,EAAAtC,EAAAuC,cAAA,WACND,EAAAtC,EAAAuC,cAAA,oDACC9C,KAAKkE,MAAMoB,SAERtF,KAAK2D,MAAM8B,SAASiB,kCAAkCR,IAAI,SAACC,GACzD,OAAOM,EAAKL,gBAAgBD,KAE5BtD,EAAAtC,EAAAuC,cAAA,qDAIcqD,GACtB,OAAQtD,EAAAtC,EAAAuC,cAAA,OAAK6D,IAAKR,EAAE3C,IAClBX,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,qBAAN,IAA4BqD,EAAE3C,IAAUX,EAAAtC,EAAAuC,cAAA,WACxCD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,iCAAiCqD,EAAEjD,MAAYL,EAAAtC,EAAAuC,cAAA,WACrDD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,wBAAwBqD,EAAES,UAAhC,IAA4CT,EAAEU,UAAgBhE,EAAAtC,EAAAuC,cAAA,WAC9DD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,0BAAN,UAAkCqD,EAAEW,OAAOC,QAAQ,IAAUlE,EAAAtC,EAAAuC,cAAA,WAC7DD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,uCAAuCqD,EAAEpF,mBAAyB8B,EAAAtC,EAAAuC,cAAA,WACxED,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,oCAAoCqD,EAAEa,gBAAsBnE,EAAAtC,EAAAuC,cAAA,WAClED,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,6BAAN,IAAoC9C,KAAKiH,oBAAoBd,EAAEe,YAAkBrE,EAAAtC,EAAAuC,cAAA,WACjFD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,6BAAN,IAAoC9C,KAAKiH,oBAAoBd,EAAEgB,YAAkBtE,EAAAtC,EAAAuC,cAAA,WAAMD,EAAAtC,EAAAuC,cAAA,yEAI9C,IAAAsE,EAAApH,KAC3C,OAAQ6C,EAAAtC,EAAAuC,cAAA,WACND,EAAAtC,EAAAuC,cAAA,4CACC9C,KAAKkE,MAAMiB,SAERnF,KAAK2D,MAAM8B,SAAS4B,4BAA4BnB,IAAI,SAACoB,EAAQnB,GAC3D,OAAOiB,EAAKG,eAAeD,EAAGF,EAAKzD,MAAM8B,SAAS+B,yBAElD3E,EAAAtC,EAAAuC,cAAA,yEAIkC,IAAA2E,EAAAzH,KAC1C,OAAQ6C,EAAAtC,EAAAuC,cAAA,WACND,EAAAtC,EAAAuC,cAAA,2CACC9C,KAAKkE,MAAMkB,SAERpF,KAAK2D,MAAM8B,SAASiC,2BAA2BxB,IAAI,SAACoB,EAAQnB,GAC1D,OAAOsB,EAAKF,eAAeD,EAAGG,EAAK9D,MAAM8B,SAASkC,wBAElD9E,EAAAtC,EAAAuC,cAAA,oDAIawE,EAAQM,GAC7B,OAAQ/E,EAAAtC,EAAAuC,cAAA,OAAK6D,IAAKW,EAAE9D,IAClBX,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,qBAAN,IAA4BwE,EAAE9D,IAAUX,EAAAtC,EAAAuC,cAAA,WACxCD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,gCAAgCwE,EAAEpE,MAAYL,EAAAtC,EAAAuC,cAAA,WACpDD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,uBAAN,IAA8BwE,EAAEO,MAAYhF,EAAAtC,EAAAuC,cAAA,WAC5CD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,0BAAN,WAAmC8E,EAAQb,QAAQ,IAAUlE,EAAAtC,EAAAuC,cAAA,WAC7DD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,mCAAN,IAA0CwE,EAAEN,gBAAsBnE,EAAAtC,EAAAuC,cAAA,WAClED,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,8BAAN,IAAqCwE,EAAEN,eAAiBM,EAAEQ,iBAAuBjF,EAAAtC,EAAAuC,cAAA,WACjFD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,+BAAN,UAAuCwE,EAAES,WAAWhB,QAAQ,IAAUlE,EAAAtC,EAAAuC,cAAA,WACtED,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,6BAAN,IAAoC9C,KAAKiH,oBAAoBK,EAAEJ,YAAkBrE,EAAAtC,EAAAuC,cAAA,WACjFD,EAAAtC,EAAAuC,cAAA,YAAMD,EAAAtC,EAAAuC,cAAA,6BAAN,IAAoC9C,KAAKiH,oBAAoBK,EAAEH,YAAkBtE,EAAAtC,EAAAuC,cAAA,WAAMD,EAAAtC,EAAAuC,cAAA,wDAI/DkF,GAC1B,IAAIC,EAAOD,EAAUE,MAAM,KAAK,GAC5BC,EAAOH,EAAUE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC9C,SAAAE,OAAUH,EAAV,KAAAG,OAAkBD,UA5KgB1E,cCLjB4E,cAEnB,SAAAA,EAAY1E,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7D,KAAAqI,IACxBzE,EAAAC,OAAAE,EAAA,EAAAF,CAAA7D,KAAA6D,OAAAG,EAAA,EAAAH,CAAAwE,GAAApE,KAAAjE,KAAM2D,KACDO,MAAQ,CACXgB,gBAAgB,GAHMtB,wEAOjB,IAAAa,EAAAzE,KACDgD,EAAS,kBAAAoF,OAAqBpI,KAAKkE,MAAMgB,eAAiB,GAAK,WAAtD,qBACToD,EAAatI,KAAK2D,MAAM2E,WAE9B,OACEzF,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,QACbH,EAAAtC,EAAAuC,cAAA,OACEiC,QAAS,kBAAMN,EAAKH,SAAS,CAAEY,gBAAiBT,EAAKP,MAAMgB,kBAC3DlC,UAAWA,GAEXH,EAAAtC,EAAAuC,cAAA,MAAIE,UAAU,cAAd,cAAuCsF,EAAW3F,cAClDE,EAAAtC,EAAAuC,cAAA,QAAME,UAAU,SAAhB,2BAAiDsF,EAAWC,uBAG7DvI,KAAKkE,MAAMgB,eAERrC,EAAAtC,EAAAuC,cAAC0F,EAAD,CAAU/C,SAAUzF,KAAK2D,MAAM2E,aAC7BzF,EAAAtC,EAAAuC,cAAA,oBA1B8BW,aCIvBgF,cAEnB,SAAAA,EAAY9E,GAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7D,KAAAyI,IACxB7E,EAAAC,OAAAE,EAAA,EAAAF,CAAA7D,KAAA6D,OAAAG,EAAA,EAAAH,CAAA4E,GAAAxE,KAAAjE,KAAM2D,KACDO,MAAQ,CACXwE,YAAa,KACbC,qBAAqB,GAJC/E,iNASEvB,WAApBqG,SACNnE,QAAQC,IAAIkE,GACRA,EAAYE,OAAS,GACvB5I,KAAKsE,SAAS,CAAEoE,2JAIKvI,GACvBH,KAAKsE,SAAS,CAAEqE,qBAAqB,IACrC3I,KAAK6I,eAAe1I,oCAGb,IAAAsE,EAAAzE,KACP,OACE6C,EAAAtC,EAAAuC,cAACD,EAAAtC,EAAMwC,SAAP,KACEF,EAAAtC,EAAAuC,cAACgG,EAAD,MACAjG,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,wBACbH,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,WACbH,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,yCACbH,EAAAtC,EAAAuC,cAACiG,EAAD,CACE5I,SAAU,SAACA,GAAD,OAAmBsE,EAAKuE,iBAAiB7I,OAGvD0C,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,0CACZhD,KAAKkE,MAAMyE,oBAER9F,EAAAtC,EAAAuC,cAAA,WACED,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,wCACbH,EAAAtC,EAAAuC,cAAA,oCAEFD,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,iCACbH,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,iBAAiBiG,KAAK,aAGvCjJ,KAAKkJ,wGASM/I,yFAErBP,EAAcO,0BAEMkC,YAApBqG,UACUE,OAAS,IACvB5I,KAAKsE,SAAS,CAAEoE,gBAChB1I,KAAKsE,SAAS,CAAEqE,qBAAqB,qJAIZ,IAAA3C,EAAAhG,KAC3B,OAAQ6C,EAAAtC,EAAAuC,cAAA,WAGJ9C,KAAKkE,MAAMwE,YAEP7F,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,MAAIE,UAAU,eAAd,yBACChD,KAAKkE,MAAMwE,YAER1I,KAAKkE,MAAMwE,YAAYxC,IAAI,SAACiD,EAAQhD,GAClC,OAAOtD,EAAAtC,EAAAuC,cAACsG,EAAD,CAAgBd,WAAYtC,EAAK9B,MAAMwE,YAAYvC,GAAIQ,IAAKR,MAEnEtD,EAAAtC,EAAAuC,cAAA,aAGRD,EAAAtC,EAAAuC,cAAA,OAAKE,UAAU,aACbH,EAAAtC,EAAAuC,cAAA,MAAIE,UAAU,eAAd,yBACAH,EAAAtC,EAAAuC,cAAA,KAAGE,UAAU,eAAb,8DAnFmBS,aCJb4F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9G,EAAAtC,EAAAuC,cAAC8G,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.43390dc4.chunk.js","sourcesContent":[" \n export async function runSimulation(settings: any){\n  let request = {\n    investorsQuantity: settings.numberOfInvestors,\n    companiesQuantity: settings.numberOfCompanies,\n    maxBudget: settings.maxInvestorBudget,\n    minBudget: settings.minInvestorBudget,\n    maxSharePrice: settings.maxSharePrice,\n    minSharePrice: settings.minSharePrice,\n    maxAmmountShares: settings.maxShareNumber,\n    minAmmountShares: settings.minShareNumber\n  }\n\n  const res = await fetch(\n    '/api/simulation/run',\n    {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(request)\n    }\n  );\n  return await res.json();\n}\n\nexport async function getSimulations() {\n  const res = await fetch(\n    '/api/simulation/relatories',\n    {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n  );\n  const json = await res.json();\n  json.sort((a:any, b:any) => (b.simulationId - a.simulationId));\n  return json;\n}","import React, { Component } from 'react'\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"/\">Stock Market Simulator</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </React.Fragment>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './simulationSettings.css';\n\ninterface Props {\n  settings: Function;\n}\n\ninterface State {\n  numberOfInvestors: number | null;\n  minInvestorBudget: number | null;\n  maxInvestorBudget: number | null;\n  numberOfCompanies: number | null;\n  minShareNumber: number | null;\n  maxShareNumber: number | null;\n  minSharePrice: number | null;\n  maxSharePrice: number | null;\n}\n\nexport default class SimulationSettings extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      numberOfInvestors: 100,\n      minInvestorBudget: 1000,\n      maxInvestorBudget: 10000,\n      numberOfCompanies: 100,\n      minShareNumber: 500,\n      maxShareNumber: 1000,\n      minSharePrice: 10,\n      maxSharePrice: 100\n    }\n\n  }\n\n  private _updateState(e: any) {\n    let state = this.state;\n    (state as any)[e.target.id] = e.target.value;\n    this.setState(state);\n    console.log(this.state);\n  }\n\n  render() {\n\n    return (\n      <div>\n        <h5>Simulation Settings</h5>\n        <form>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"numberOfInvestors\">Number of Investors</label><br/>\n            <span id='demo'><strong>{this.state.numberOfInvestors}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"1\" max=\"100\" value={this.state.numberOfInvestors!} className=\"slider\" id=\"numberOfInvestors\" />\n          </div>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"minInvestorBudget\">Min Investor Budget</label><br/>\n            <span id='demo'><strong>{this.state.minInvestorBudget}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"1000\" max=\"5000\" value={this.state.minInvestorBudget!} className=\"slider\" id=\"minInvestorBudget\" />\n          </div>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"maxInvestorBudget\">Max Investor Budget</label><br/>\n            <span id='demo'><strong>{this.state.maxInvestorBudget}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"5000\" max=\"10000\" value={this.state.maxInvestorBudget!} className=\"slider\" id=\"maxInvestorBudget\" />\n          </div>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"numberOfCompanies\">Number of Companies</label><br/>\n            <span id='demo'><strong>{this.state.numberOfCompanies}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"1\" max=\"100\" value={this.state.numberOfCompanies!} className=\"slider\" id=\"numberOfCompanies\" />\n          </div>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"minShareNumber\">Min Number of Shares</label><br/>\n            <span id='demo'><strong>{this.state.minShareNumber}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"500\" max=\"750\" value={this.state.minShareNumber!} className=\"slider\" id=\"minShareNumber\" />\n          </div>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"maxShareNumber\">Max Number of Shares</label><br/>\n            <span id='demo'><strong>{this.state.maxShareNumber}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"750\" max=\"1000\" value={this.state.maxShareNumber!} className=\"slider\" id=\"maxShareNumber\" />\n          </div>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"minSharePrice\">Min Share Price</label><br/>\n            <span id='demo'><strong>{this.state.minSharePrice}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"10\" max=\"50\" value={this.state.minSharePrice!} className=\"slider\" id=\"minSharePrice\" />\n          </div>\n\n          <div className=\"formGroup\">\n            <label className='mar-top' htmlFor=\"maxSharePrice\">Max Share Price</label><br/>\n            <span id='demo'><strong>{this.state.maxSharePrice}</strong></span>\n            <input\n              onChange={(e) => this._updateState(e)}\n              type=\"range\" min=\"50\" max=\"100\" value={this.state.maxSharePrice!} className=\"slider\" id=\"maxSharePrice\" />\n          </div>\n\n          <label onClick={() => this._handleRunClick()} className=\"btn btn-sm btn-dark mt-2\">Run</label>\n        </form>\n      </div>\n    )\n\n  }\n\n  private _handleRunClick() {\n    this.props.settings(this.state);\n  }\n}\n","import React, { Component } from 'react'\nimport './relatory.css';\n\ninterface Props {\n  relatory: any;\n}\n\ninterface State {\n  showRelatories: boolean,\n  showCWHC: boolean,\n  showCWLC: boolean,\n  showIWHS: boolean,\n  showIWLS: boolean,\n  showIWHC: boolean,\n  showIWLC: boolean\n}\n\nexport default class Relatory extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      showRelatories: false,\n      showCWHC: false,\n      showCWLC: false,\n      showIWHS: false,\n      showIWLS: false,\n      showIWHC: false,\n      showIWLC: false\n    }\n  }\n\n  componentDidMount(){\n    console.log(this.props.relatory);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className='border bg-dark'>\n          <div\n            className='border bg-white hover rel'\n            onClick={() => this.setState({ showCWHC: !this.state.showCWHC })}\n          >\n            {this._renderCompaniesWithHighestCapital()}\n          </div>\n\n          <div\n            className='border bg-white hover rel'\n            onClick={() => this.setState({ showCWLC: !this.state.showCWLC })}\n          >\n            {this._renderCompaniesWithLowestCapital()}\n          </div>\n\n          <div\n            onClick={() => this.setState({ showIWHS: !this.state.showIWHS })}\n            className='border bg-white hover rel'>\n            {this._renderInvestorsWithHeighestShares()}\n          </div>\n\n          <div\n            onClick={() => this.setState({ showIWLS: !this.state.showIWLS })}\n            className='border bg-white hover rel'\n          >\n            {this._renderInvestorsWithLowestShares()}\n          </div>\n\n          <div\n            onClick={() => this.setState({ showIWHC: !this.state.showIWHC })}\n            className='border bg-white hover rel'\n          >\n            {this._renderInvestorsWithHeighestCompanies()}\n          </div>\n\n          <div\n            onClick={() => this.setState({ showIWLC: !this.state.showIWLC })}\n            className='border bg-white hover rel'\n          >\n            {this._renderInvestorsWithLowestCompanies()}\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  private _renderInvestorsWithHeighestCompanies() {\n    return (<div>\n      <h6>Investors With Highest Number of Companies</h6>\n\n      {this.state.showIWHC ?\n        (\n          this.props.relatory.investorWithHighestNumberOfCompanies.map((i: any) => {\n            return this._renderInvestor(i);\n          })\n        ) : <div></div>}\n\n    </div>);\n  }\n\n  private _renderInvestorsWithLowestCompanies() {\n    return (<div>\n      <h6>Investors With Lowest Number of Companies</h6>\n      {this.state.showIWLC ?\n        (\n          this.props.relatory.investorWithLeastNumberOfCompanies.map((i: any) => {\n            return this._renderInvestor(i);\n          })\n        ) : <div></div>}\n    </div>);\n  }\n\n  private _renderInvestorsWithHeighestShares() {\n    return (<div>\n      <h6>Investors With Highest Number of Shares</h6>\n      {this.state.showIWHS ?\n        (\n          this.props.relatory.investorsWithHighestNumberOfShares.map((i: any) => {\n            return this._renderInvestor(i);\n          })\n        ) : <div></div>}\n    </div>);\n  }\n\n  private _renderInvestorsWithLowestShares() {\n    return (<div>\n      <h6>Investors With Lowest Number of Shares</h6>\n      {this.state.showIWLS ?\n        (\n          this.props.relatory.investorsWithLowestNumberOfShares.map((i: any) => {\n            return this._renderInvestor(i)\n          })\n        ) : <div></div>}\n    </div>);\n  }\n\n  private _renderInvestor(i: any) {\n    return (<div key={i.id}>\n      <span><strong>Id:</strong> {i.id}</span><br />\n      <span><strong>Investor Type: </strong>{i.type}</span><br />\n      <span><strong>Name: </strong>{i.firstName} {i.lastName}</span><br />\n      <span><strong>Budget: </strong>€ {i.budget.toFixed(2)}</span><br />\n      <span><strong>Number of Companies: </strong>{i.numberOfCompanies}</span><br />\n      <span><strong>Number of Shares: </strong>{i.numberOfShares}</span><br />\n      <span><strong>Created at:</strong> {this._timestampConverter(i.createdAt)}</span><br />\n      <span><strong>Updated at:</strong> {this._timestampConverter(i.updatedAt)}</span><br /><br />\n    </div>);\n  }\n\n  private _renderCompaniesWithHighestCapital() {\n    return (<div>\n      <h6>Companies With Highest Capital</h6>\n      {this.state.showCWHC ?\n        (\n          this.props.relatory.companiesWithHighestCapital.map((c: any, i: any) => {\n            return this._renderCompany(c, this.props.relatory.companyHighestCapital)\n          })\n        ) : <div></div>}\n    </div>)\n  }\n\n  private _renderCompaniesWithLowestCapital() {\n    return (<div>\n      <h6>Companies With Lowest Capital</h6>\n      {this.state.showCWLC ?\n        (\n          this.props.relatory.companiesWithLowestCapital.map((c: any, i: any) => {\n            return this._renderCompany(c, this.props.relatory.companyLowestCapital)\n          })\n        ) : <div></div>}\n    </div>)\n  }\n\n  private _renderCompany(c: any, capital: any) {\n    return (<div key={c.id}>\n      <span><strong>Id:</strong> {c.id}</span><br />\n      <span><strong>Company Type: </strong>{c.type}</span><br />\n      <span><strong>Name:</strong> {c.name}</span><br />\n      <span><strong>Capital:</strong> € {capital.toFixed(2)}</span><br />\n      <span><strong>Number of Shares:</strong> {c.numberOfShares}</span><br />\n      <span><strong>Sold Shares:</strong> {c.numberOfShares - c.availableShares}</span><br />\n      <span><strong>Share Price: </strong>€ {c.sharePrice.toFixed(2)}</span><br />\n      <span><strong>Created at:</strong> {this._timestampConverter(c.createdAt)}</span><br />\n      <span><strong>Updated at:</strong> {this._timestampConverter(c.updatedAt)}</span><br /><br />\n    </div>);\n  }\n\n  private _timestampConverter(timestamp: string) {\n    let date = timestamp.split('T')[0];\n    let time = timestamp.split('T')[1].split('.')[0];\n    return `${date} ${time}`;\n  }\n\n}\n","import React, { Component } from 'react';\nimport './simulationView.css';\nimport Relatory from '../../relatories/relatory/relatory';\n\ninterface Props {\n  simulation: any;\n}\n\ninterface State {\n  showRelatories: boolean\n}\n\nexport default class SimulationView extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      showRelatories: false\n    }\n  }\n\n  render() {\n    const className = ` btn btn-lg btn${this.state.showRelatories ? '' : '-outline'}-dark w-100 hover`;\n    const simulation = this.props.simulation;\n\n    return (\n      <div className='mb-2'>\n        <div\n          onClick={() => this.setState({ showRelatories: !this.state.showRelatories })}\n          className={className}\n        >\n          <h5 className='sim-margin'>Simulation {simulation.simulationId}</h5>\n          <span className='small'>Number of Transactions: {simulation.numberOfTransactions}</span>\n        </div>\n\n        {this.state.showRelatories ?\n          (\n            <Relatory relatory={this.props.simulation} />\n          ) : <div></div>}\n\n      </div>\n    )\n\n  }\n}\n","import React, { Component } from 'react';\nimport { runSimulation, getSimulations } from './services/simulationService';\nimport './App.css';\nimport Navbar from './components/navbar/navbar';\nimport SimulationSettings from './components/simulation/simulationSettings/simulationSettings';\nimport SimulationView from './components/simulation/simulationView.tsx/simulationView';\n\ninterface Props {\n\n}\n\ninterface State {\n  simulations: any,\n  isSimulationRunning: boolean\n}\n\nexport default class App extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      simulations: null,\n      isSimulationRunning: false\n    }\n  }\n\n  async componentDidMount() {\n    const simulations = await getSimulations();\n    console.log(simulations);\n    if (simulations.length > 0) {\n      this.setState({ simulations });\n    }\n  }\n\n  private _handleRunButton(settings: any) {\n    this.setState({ isSimulationRunning: true });\n    this._runSimulation(settings);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container-fluid pt-3\">\n          <div className=\"row hei\">\n            <div className=\"col-4 col-sm-3 col-md-3 col-lg-2  p-1\">\n              <SimulationSettings\n                settings={(settings: any) => this._handleRunButton(settings)}\n              />\n            </div>\n            <div className=\"col-8 col-sm-9 col-md-9 col-lg-10  p-1\">\n              {this.state.isSimulationRunning ?\n                (\n                  <div>\n                    <div className=\"d-flex justify-content-center margin\">\n                      <h5>Simulation running...</h5>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                      <div className=\"spinner-border\" role=\"status\"></div>\n                    </div>\n                  </div>\n                ) : this._renderSimulations()}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n\n  }\n\n  private async _runSimulation(settings: any) {\n\n    await runSimulation(settings);\n\n    const simulations = await getSimulations();\n    if (simulations.length > 0) {\n      this.setState({ simulations });\n      this.setState({ isSimulationRunning: false });\n    }\n  }\n\n  private _renderSimulations() {\n    return (<div>\n\n      {\n        this.state.simulations ?\n          (\n            <div className='container'>\n              <h5 className='text-center'>Available Simulations</h5>\n              {this.state.simulations ?\n                (\n                  this.state.simulations.map((s: any, i: any) => {\n                    return <SimulationView simulation={this.state.simulations[i]} key={i} />\n                  })\n                ) : <div></div>}\n            </div>\n          ) : (\n            <div className='container'>\n              <h5 className='text-center'>No Simulations Stored</h5>\n              <p className='text-center'>Please run simulations to see their results here.</p>\n            </div>\n          )}\n    </div >)\n  }\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}